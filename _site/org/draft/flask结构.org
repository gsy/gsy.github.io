* flask代码结构
  - flask 主代码
  - test 测试
* flask各文件的主要作用
** __init__
   引入各种包，简化命名
** __main__
   flask.run命令的别名文件
** _compat
   对py2和py3做兼容处理
** app
   - 定义了一些全局对象：Request, Response, Environment, Globals
   - del函数的作用是什么？为什么定义了两个函数之后又设置成none？
   - request hooks:
     - before_first_request
     - before_request
     - after_request
     - teardown_request
     - url_value_preprocessor
   - Blueprint是什么？
   - locked_cached_property的作用？
   - 锁怎么用？在资源管理器with中怎么用？
   - instance_path? 
   - jinja autoescape?
*** dispatch_request
    - get request from request stack
    - get rule
    - find view_function according to rule.endpoint
    - serve and return result
*** full_dispatch_request
    - preprossess
    - dispatch_request
    - make_response
    - process_response
**** picture
     #+BEGIN_SRC ditaa :file full_dispatch_request.png :cmdline -r -s 0.8
            

                +-------------------+              +--------------------+
                |                   | url.endpoint |                    |
             +->|    dispatcher     +------------->|   view function    |
             |  |                   |              |                    |
             |  |                   |              |                    |
             |  +-------------------+              +-----------+--------+
             |                                                 |
             | HTTP request                                    |
             |                                                 |
             |                                                 |rv
             |                  +-----------------------+      |
             |                  |                       |      |
             |                  |                       |      |
         +---+------+      +----+       make response   |<-----+
         |          |      |    |                       |
         |  user    |      |    |                       |
         |          | <----+    +-----------------------+
         |          |   HTTP Response
         |          |                
         +----------+                
                                       
     #+END_SRC     

     #+results:
     q[[file:full_dispatch_request.png]]

	
   

*** wsgi_app
    environ, start_response callback function
    1. make context from environment
    2. dispatch request and get response
    3. handle error if error occurred

** blueprints
   
