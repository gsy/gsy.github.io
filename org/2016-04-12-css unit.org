#+BEGIN_HTML
---
layout: post
title: CSS Unit
---
#+END_HTML
#+OPTIONS: toc:nil
css的计量单位分为绝对单位和相对单位

* 绝对长度单位
   我们实际生活中使用的计量单位，如果需要打印的话，这些单位非常适合。
** pixels
   使用得最多的计量单位。像素，很抽象，大概长这样：
   [[assets/img/pixles.jpg]]
** print length
    - inches 1 inches = 2.54 centimeters
    - centimeters 厘米
    - millimeters 毫米
    - points 1 ponts = 1/72 inches
    - picas 1 picas = 12 points
* 相对长度单位
   相对于某个基准来计算的长度。分为3种情况
   - 1.相对于父元素的尺寸 (%)
   - 2.已经声明的字体的尺寸 (em, rem, ex, ch)
   - 3.viewport的尺寸(vw, vh, vmin, vmax)
** percentages(%)
    相对于父元素来计算长度。
    #+BEGIN_HTML
    <iframe height='268' scrolling='no' src='//codepen.io/guangdane/embed/KzQJQM/?height=268&theme-id=0&default-tab=result' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='http://codepen.io/guangdane/pen/KzQJQM/'>css units</a> by guang (<a href='http://codepen.io/guangdane'>@guangdane</a>) on <a href='http://codepen.io'>CodePen</a>.
</iframe>
    #+END_HTML
    - 如果percent值超过了100%，那么儿子元素会超出父元素的范围
    - 如果percent设置成100%，而且使用content-box模型的话，儿子元素会超出父元素的范围。一个快速的修正是儿子元素使用border-box模型
** 基于viewport计算的计量单位    
    - viewport dimensions (vw & vh)
      将整个页面划分成100 * 100的矩形，基本单位是1个grid的长度，width=50vw的意思是使用一半的页面宽度，同理height=30vh的意思是用将近1/3的页面高度。
      #+BEGIN_HTML
      <iframe height='268' scrolling='no' src='//codepen.io/guangdane/embed/qZxgJM/?height=268&theme-id=0&default-tab=result' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='http://codepen.io/guangdane/pen/qZxgJM/'>css unit-vw&vh</a> by guang (<a href='http://codepen.io/guangdane'>@guangdane</a>) on <a href='http://codepen.io'>CodePen</a>.
</iframe>
      #+END_HTML
    - viewport max(vmax) & viewport min(vmin)
      vmin和vmax仍然使用100 * 100的viewport grid，vmin是使用划分grid中长、宽中较小的长度作为标准，vmax相反。如果页面的height比width大，那么计量的结果是相对于页面宽度来说的。
** 基于字体大小的计量单位
    - ex & ch
      ex是讲当前font-family中"x"字符的高度作为一个单位长度的计量单位，ch是将"0"的高度作为一个unit的计量单位。    
    - font-size (em & rem)
      em是基于font-size的计量单位，修改font-size会修改所有以em作为单位的元素的尺寸。一个有意思的现象是如果font-size在嵌套元素里面修改，相同的em值的元素在不同层次尺寸是不一致的，有点像递归调用。
      rem是root em，基于root元素的font-size作为单位长度的计量单位。使用rem的优点是可以通过font-size对全局的尺寸做缩放，在web app上很有用。
      #+BEGIN_HTML
      <iframe height='268' scrolling='no' src='//codepen.io/guangdane/embed/xVYBOm/?height=268&theme-id=0&default-tab=result' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='http://codepen.io/guangdane/pen/xVYBOm/'>css unit-em&rem</a> by guang (<a href='http://codepen.io/guangdane'>@guangdane</a>) on <a href='http://codepen.io'>CodePen</a>.
</iframe>
      #+END_HTML
    

